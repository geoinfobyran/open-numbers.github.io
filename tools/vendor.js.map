{"version":3,"sources":["webpack:///vendor.js","webpack:///webpack/bootstrap 8d676237cc9d0046b126","webpack:///./node_modules/d3/build/d3.js","webpack:///./node_modules/urlon/dist/urlon.umd.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","parentJsonpFunction","window","chunkIds","moreModules","executeModules","chunkId","result","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","shift","s","2","e","onScriptComplete","script","onerror","onload","clearTimeout","timeout","chunk","Error","undefined","installedChunkData","Promise","resolve","promise","reject","head","document","getElementsByTagName","createElement","type","charset","async","nc","setAttribute","src","p","setTimeout","appendChild","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","n","__esModule","object","property","oe","err","console","error","4","global","factory","define","amd","d3","this","ascending","a","b","NaN","bisector","compare","ascendingComparator","left","x","lo","hi","mid","right","f","pairs","array","pair","Array","cross","values0","values1","reduce","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","value","delta","mean","sum","isNaN","deviation","v","Math","sqrt","extent","min","max","constant","identity","sequence","start","stop","step","arguments","ceil","range","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","pow","e10","e5","e2","tickStep","step0","abs","step1","sturges","LN2","histogram","data","xz","domain","x0","x1","tz","threshold","isArray","pop","bin","bins","bisectRight","_","thresholds","slice","freedmanDiaconis","map","sort","scott","median","numbers","merge","arrays","merged","j","permute","indexes","permutes","scan","xi","xj","shuffle","t","random","transpose","matrix","row","zip","identity$1","translateX","translateY","y","number$1","scale","center","offset","bandwidth","round","entering","__axis","axis","orient","context","tickValues","apply","tickArguments","format","tickFormat","spacing","tickSizeInner","tickPadding","range0","range1","position","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","insert","k","top","bottom","transition","epsilon","transform","getAttribute","parentNode","remove","tickSizeOuter","filter","each","slice$1","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","Dispatch","parseTypenames","typenames","types","trim","split","indexOf","set","callback","noop","concat","namespace","prefix","namespaces","space","local","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElementNS","creatorFixed","fullname","creator","none","selector","querySelector","selection_select","groups","_groups","subgroups","node","subnode","group","subgroup","__data__","Selection","_parents","empty$1","selectorAll","querySelectorAll","selection_selectAll","parents","selection_filter","match","matcher$1","sparse","update","selection_enter","_enter","EnterNode","parent","datum","_next","_parent","constant$1","bindIndex","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","keyPrefix","selection_data","size","bind","enterGroup","updateGroup","previous","next","_exit","selection_exit","selection_merge","selection$$1","groups0","groups1","m0","m1","merges","group0","group1","selection_order","nextSibling","insertBefore","selection_sort","compareNode","ascending$1","sortgroups","sortgroup","selection_call","selection_nodes","nodes","selection_node","selection_size","selection_empty","selection_each","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","selection_attr","getAttributeNS","defaultView","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","selection_style","styleValue","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","selection_property","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","selection_classed","contains","textRemove","textContent","textConstant","textFunction","selection_text","htmlRemove","innerHTML","htmlConstant","htmlFunction","selection_html","raise","selection_raise","lower","previousSibling","firstChild","selection_lower","selection_append","create","constantNull","selection_insert","before","removeChild","selection_remove","selection_cloneShallow","cloneNode","selection_cloneDeep","selection_clone","deep","selection_datum","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","parseTypenames$1","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","selection_on","customEvent","that","args","sourceEvent","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","selection_dispatch","root","local$1","Local","nextId","toString","source","current","point","svg","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","touch","touches","identifier","points","nopropagation","stopImmediatePropagation","noevent","preventDefault","dragDisable","view","__noselect","MozUserSelect","yesdrag","noclick","constant$2","DragEvent","target","subject","id","active","dx","dy","defaultFilter$1","button","defaultContainer","defaultSubject","defaultTouchable","drag","mousedowned","touchable","touchstarted","touchmoved","touchended","touchending","gesture","beforestart","container","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","sublisteners","listeners","p0","clickDistance","constructor","extend","definition","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","h","Hsl","hslConvert","hsl","hsl2rgb","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","basis$1","basisClosed","constant$3","linear","exponential","hue","gamma","nogamma","rgbSpline","spline","colors","color$$1","array$1","nb","na","interpolateValue","date","Date","setTime","reinterpolate","zero","one","interpolateString","am","bm","bs","bi","reA","lastIndex","reB","q","join","interpolateRgb","valueOf","interpolateRound","decompose","scaleX","scaleY","skewX","rotate","degrees","atan","parseCss","identity$2","cssNode","cssRoot","cssView","parseSvg","svgNode","baseVal","consolidate","interpolateTransform","parse","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","cosh","exp","sinh","tanh","interpolateZoom","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","epsilon2","rho","d1","b0","rho4","rho2","b1","r0","r1","coshr0","u","duration","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","quantize","interpolator","samples","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","nap","poke","pokeDelay","Infinity","taskTail","sleep","interval","clearInterval","setInterval","timeout$1","elapsed","interval$1","total","schedule","timing","schedules","__transition","create$1","emptyOn","tween","emptyTween","ease","state","CREATED","init","get$1","set$1","STARTING","self","SCHEDULED","STARTED","RUNNING","ENDED","ENDING","interrupt","schedule$$1","empty","selection_interrupt","tweenRemove","tween0","tween1","splice","tweenFunction","transition_tween","_id","tweenValue","interpolate","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","attrConstantNS$1","attrFunction$1","value10","attrFunctionNS$1","transition_attr","interpolateTransformSvg","attrTween","attrTweenNS","_value","transition_attrTween","delayFunction","delayConstant","transition_delay","durationFunction","durationConstant","transition_duration","easeConstant","transition_ease","transition_filter","Transition","_name","transition_merge","transition$$1","every","onFunction","on0","on1","sit","transition_on","removeFunction","transition_remove","transition_select","transition_selectAll","child","children","inherit","transition_selection","Selection$1","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","transition_style","interpolateTransformCss","styleTween","transition_styleTween","textConstant$1","textFunction$1","transition_text","transition_transition","id0","id1","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","defaultTiming","selection_transition","root$1","constant$4","BrushEvent","nopropagation$1","noevent$1","defaultFilter","defaultExtent","width","height","__brush","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","XY","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","shifting","lockX","lockY","moving","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","e0","e1","signY","N","s0","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","keydowned","keyCode","keyupped","altKey","metaKey","signsX","signsY","shiftKey","selection1","selection0","input","starting","compareValue","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","forEach","max$1","tau$1","padAngle","di","dj","a0","a1","subindex","startAngle","endAngle","sortChords","constant$5","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","defaultEndAngle","ribbon","buffer","argv","slice$2","sr","sa0","halfPi$1","sa1","sx0","sy0","tr","ta0","ta1","moveTo","arc","quadraticCurveTo","closePath","Map","map$1","nest","depth","createResult","setResult","keys","sortValues","rollup","valuesByKey","entries","sortKey","sortKeys","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","inferColumns","rows","columnSet","column","dsv","delimiter","convert","parseRows","token","eof","EOF","eol","EOL","I","charCodeAt","QUOTE","NEWLINE","RETURN","replace","DELIMITER","formatValue","formatRows","formatRow","reFormat","test","RegExp","center$1","force","sx","sy","constant$6","jiggle","tree_add","_x","_y","cover","tree","xm","ym","xp","yp","_root","leaf","y0","y1","addAll","yz","tree_cover","z","tree_data","visit","tree_extent","Quad","tree_find","x2","y2","x3","y3","quads","tree_remove","retainer","removeAll","tree_root","tree_size","tree_visit","tree_visitAfter","defaultX","tree_x","defaultY","tree_y","quadtree","Quadtree","leaf_copy","vx","vy","collide","quad","rj","ri","yi","strength","ri2","iterations","visitAfter","prepare","radii","find","nodeById","nodeId","link","links","defaultStrength","alpha","distances","strengths","bias","initializeStrength","initializeDistance","distance","x$1","y$1","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","fx","velocityDecay","fy","initializeNodes","initialRadius","angle","initialAngle","initializeForce","closest","manyBody","accumulate","weight","w","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","theta","radial","radiuses","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","exponent","prefixExponent","formatRounded","formatSpecifier","specifier","FormatSpecifier","re","fill","align","sign","symbol","comma","precision","formatTypes","identity$3","formatLocale","locale","newFormat","valuePrefix","valueSuffix","suffix","formatType","valueNegative","prefixes","maybeSuffix","decimal","padding","currency","percent","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","add$1","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","geoStream","streamObjectType","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","area","areaSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","normal","equatorial","inflection","phii","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","bounds","feature","deltaMax","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","centroid","epsilon2$1","constant$7","compose","invert","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","circle","ring","clipBuffer","lines","rejoin","pointEqual","Intersection","other","entry","clipRejoin","segments","compareIntersection","startInside","clip","segment","link$1","isSubject","polygonContains","polygon","winding","sum$1","sinPhi1","cosPhi1","absDelta","intersection","phiArc","pointVisible","clipLine","sink","pointLine","pointRing","ringSink","ringStart","ringEnd","clean","ringSegments","ringBuffer","polygonStarted","validSegment","sphere","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","clipAntimeridianInterpolate","from","to","clipCircle","visible","cr","c0","v00","point2","smallRadius","code","intersect","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","polar","meridian","q1","ax","ay","bx","by","clipRectangle","corner","comparePoint","ca","cb","activeStream","polygonInside","bufferStream","cleanInside","clipStream","first","v_","x_","y_","x__","y__","v__","clipMin","clipMax","extent$1","cache","cacheStream","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","length$1","object$1","containsGeometry","containsGeometryType","containsPoint","containsLine","ab","containsPolygon","ringRadians","pointRadians","containsObjectType","graticuleX","graticuleY","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","interpolate$1","cy0","cy1","sy1","kx0","ky0","kx1","ky1","B","identity$4","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","index$1","projection","pointRadius","contextStream","projectionStream","measure","boundsStream$1","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","resample","project","delta2","resample$1","resampleNone","resampleLineTo","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringPoint","a00","b00","c00","transformRotate","projectionMutator","projectAt","projectRotate","projectTransform","recenter","preclip","clipAntimeridian","postclip","projectResample","transformRadians","clipAngle","conicProjection","parallels","cylindricalEqualAreaRaw","conicEqualAreaRaw","r0y","conicEqualArea","albers","multiplex","streams","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualArea","azimuthalEqualAreaRaw","azimuthalEquidistant","azimuthalEquidistantRaw","mercatorRaw","tan","mercator","mercatorProjection","reclip","tany","conicConformalRaw","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","scaleTranslate","kx","ky","tx","ty","identity$5","transform$$1","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","defaultSeparation","meanX","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","eachBefore","node_path","ancestor","leastCommonAncestor","aNodes","ancestors","bNodes","node_ancestors","node_descendants","node_leaves","leaves","node_links","hierarchy","childs","Node","valued","defaultChildren","computeHeight","node_copy","copyData","shuffle$1","enclose","circles","slice$3","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","encloseBasis1","r2","x21","y21","r21","r3","a2","a3","c3","place","da","db","dc","intersects","score","Node$1","packEnclose","aa","sj","sk","pack","siblings","optional","required","constantZero","constant$8","defaultRadius$1","index$2","radiusLeaf","packChildren","translateChild","roundNode","treemapDice","partition","positionNode","defaultId","defaultParentId","parentId","stratify","nodeKey","nodeByKey","keyPrefix$1","ambiguous","preroot","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","change","executeShifts","nextAncestor","vim","TreeNode","treeRoot","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","treemapSlice","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","dice","index$3","treemap","paddingStack","paddingInner","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","squarify","paddingOuter","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","area$1","centroid$1","cross$1","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","defaultSource$1","request","url","respond","status","xhr","hasResponse","response","mimeType","responseType","headers","XMLHttpRequest","user","password","XDomainRequest","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","has","setRequestHeader","overrideMimeType","fixCallback","responseText","type$1","defaultMimeType","dsv$1","responseOf","request$$1","ordinal","unknown","implicit","slice$5","band","rescale","range$$1","ordinalRange","rangeRound","pointish","point$1","constant$9","number$2","deinterpolateLinear","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","polymap","clamp","continuous","piecewise","unit","map$3","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","pow$1","sqrt$1","quantile$$1","invertExtent","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","formats","pad","pads","charAt","newParse","newDate","week","day$$1","parseSpecifier","Q","V","utcMonday","utcDay","getUTCFullYear","getUTCMonth","monday","day","getFullYear","getMonth","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","requoteRe","numberRe","percentRe","year","getMilliseconds","getMinutes","getSeconds","sunday","thursday","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","dow","utcSunday","utcThursday","defaultLocale$1","locale$1","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$3","calendar","year$$1","month$$1","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","month","hour","minute","second","millisecond","utcTime","utcMonth","utcHour","utcMinute","rainbow$1","ts","rainbow","ramp","sequential","constant$10","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","sqrt$2","ox","oy","x11","y11","max$2","cx0","cx1","dx0","dy0","dx1","dy1","abs$1","epsilon$3","tau$4","cos$2","sin$2","a01","a11","a10","da0","da1","ap","rp","padRadius","min$1","cornerRadius","rc0","rc1","oc","kc","lc","atan2$1","lineTo","Linear","curveLinear","x$3","y$3","defined0","curve","defined","x$$1","y$$1","area$2","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","Radial","_curve","curveRadial","lineRadial","lineRadial$1","curveRadialLinear","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","PI","linkSource","linkTarget","link$2","slice$6","curveHorizontal","bezierCurveTo","curveVertical","curveRadial$1","p2","p3","linkHorizontal","linkVertical","linkRadial","draw","circle$2","noop$2","point$2","Basis","basis$2","BasisClosed","basisClosed$1","BasisOpen","basisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","linearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","natural","Step","_t","stepBefore","stepAfter","none$1","series","none$2","stackValue","stack","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","ascending$2","sum$2","descending$2","insideOut","tops","bottoms","constant$11","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v01","v11","v10","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","voronoi","polygons","triangles","constant$12","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","noevent$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultTouchable$1","defaultConstrain","translateExtent","invertX","invertY","zoom","wheeled","dblclicked","scaleExtent","Gesture","wheelidled","wheel","wheelDelta","wheelDelay","constrain","k1","touch0","touch1","touchstarting","touchDelay","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","ascendingBisect","bisectLeft","T","xlink","xml","xmlns","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","mouseenter","mouseleave","classed","html","clone","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","brighter","darker","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","SQRT2","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","performance","requestAnimationFrame","TypeError","selection_prototype","polyIn","custom","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","amplitude","period","elasticOut","elasticInOut","xy","nw","ne","se","sw","pi$1","pi$2","tau$2","tauEpsilon","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","clear","proto","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","treeProto","","toFixed","toUpperCase","temp","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaRing","areaSum$1","_radius","_line","_point","lengthRing","_circle","cxcy","descendants","resquarify","_squarify","slice$4","defer","await","results","awaitAll","uniform","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","createRange","createContextualFragment","json","responseXML","csv$1","tsv$1","array$2","milliseconds","seconds","minutes","hours","tuesday","wednesday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","-","0","formatIso","parseIso","category10","category20b","category20c","category20","cubehelix$3","warm","cool","viridis","magma","inferno","plasma","cross$2","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","symbols","_x3","_x4","_y3","_y4","bundle","cardinal","_x5","_y5","cardinalClosed","cardinal$$1","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRom$$1","catmullRomOpen","_t0","px","py","after","grandpa","uncle","sibling","_found","applyX","applyY","location","rescaleX","rescaleY","version","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceRadial","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","clientPoint","radialArea","radialLine","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","49","5","urlon","encodeString","str","regexp","encodeURI","res","recursive","val","keyStringifyRegexp","valueStringifyRegexp","readToken","pos","parseToken","valueParseRegexp","parseFloat","loop","keyParseRegexp","decodeURI"],"mappings":"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","file":"vendor.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, resolves = [], result;\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId]) {\n/******/ \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n/******/ \t\t\t}\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n/******/ \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);\n/******/ \t\twhile(resolves.length) {\n/******/ \t\t\tresolves.shift()();\n/******/ \t\t}\n/******/ \t\tif(executeModules) {\n/******/ \t\t\tfor(i=0; i < executeModules.length; i++) {\n/******/ \t\t\t\tresult = __webpack_require__(__webpack_require__.s = executeModules[i]);\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\treturn result;\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// objects to store loaded and loading chunks\n/******/ \tvar installedChunks = {\n/******/ \t\t2: 0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId) {\n/******/ \t\tvar installedChunkData = installedChunks[chunkId];\n/******/ \t\tif(installedChunkData === 0) {\n/******/ \t\t\treturn new Promise(function(resolve) { resolve(); });\n/******/ \t\t}\n/******/\n/******/ \t\t// a Promise means \"currently loading\".\n/******/ \t\tif(installedChunkData) {\n/******/ \t\t\treturn installedChunkData[2];\n/******/ \t\t}\n/******/\n/******/ \t\t// setup Promise in chunk cache\n/******/ \t\tvar promise = new Promise(function(resolve, reject) {\n/******/ \t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n/******/ \t\t});\n/******/ \t\tinstalledChunkData[2] = promise;\n/******/\n/******/ \t\t// start chunk loading\n/******/ \t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\tvar script = document.createElement('script');\n/******/ \t\tscript.type = 'text/javascript';\n/******/ \t\tscript.charset = 'utf-8';\n/******/ \t\tscript.async = true;\n/******/ \t\tscript.timeout = 120000;\n/******/\n/******/ \t\tif (__webpack_require__.nc) {\n/******/ \t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n/******/ \t\t}\n/******/ \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".js\";\n/******/ \t\tvar timeout = setTimeout(onScriptComplete, 120000);\n/******/ \t\tscript.onerror = script.onload = onScriptComplete;\n/******/ \t\tfunction onScriptComplete() {\n/******/ \t\t\t// avoid mem leaks in IE.\n/******/ \t\t\tscript.onerror = script.onload = null;\n/******/ \t\t\tclearTimeout(timeout);\n/******/ \t\t\tvar chunk = installedChunks[chunkId];\n/******/ \t\t\tif(chunk !== 0) {\n/******/ \t\t\t\tif(chunk) {\n/******/ \t\t\t\t\tchunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));\n/******/ \t\t\t\t}\n/******/ \t\t\t\tinstalledChunks[chunkId] = undefined;\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t\thead.appendChild(script);\n/******/\n/******/ \t\treturn promise;\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// on error function for async loading\n/******/ \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 49);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 4:\n/***/ (function(module, exports) {\n\n// https://d3js.org Version 4.13.0. Copyright 2018 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.13.0\";\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nfunction pairs(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction cross(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction variance(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n\nfunction deviation(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction sequence(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction sturges(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\nfunction histogram() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction threshold(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction max(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n\nfunction mean(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n\nfunction median(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n}\n\nfunction merge(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\nfunction min(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n\nfunction permute(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n\nfunction scan(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n\nfunction shuffle(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n\nfunction sum(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nvar slice$1 = Array.prototype.slice;\n\nfunction identity$1(x) {\n  return x;\n}\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number$1(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nfunction namespace(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nfunction creator(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\nfunction none() {}\n\nfunction selector(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n\nfunction selection_select(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction empty$1() {\n  return [];\n}\n\nfunction selectorAll(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\nfunction selection_selectAll(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nfunction selection_filter(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction sparse(update) {\n  return new Array(update.length);\n}\n\nfunction selection_enter() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nfunction constant$1(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction selection_data(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\nfunction selection_exit() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n\nfunction selection_merge(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n\nfunction selection_order() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction selection_sort(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction selection_call() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\nfunction selection_nodes() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n\nfunction selection_node() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\nfunction selection_size() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n\nfunction selection_empty() {\n  return !this.node();\n}\n\nfunction selection_each(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nfunction selection_attr(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\nfunction defaultView(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nfunction selection_style(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nfunction selection_property(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nfunction selection_classed(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_text(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_html(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nfunction selection_raise() {\n  return this.each(raise);\n}\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nfunction selection_lower() {\n  return this.each(lower);\n}\n\nfunction selection_append(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\nfunction constantNull() {\n  return null;\n}\n\nfunction selection_insert(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nfunction selection_remove() {\n  return this.each(remove);\n}\n\nfunction selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nfunction selection_clone(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n\nfunction selection_datum(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nfunction selection_on(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nfunction selection_dispatch(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nfunction select(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n\nfunction create(name) {\n  return select(creator(name).call(document.documentElement));\n}\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction sourceEvent() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n\nfunction point(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n\nfunction mouse(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n\nfunction selectAll(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n\nfunction touch(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n\nfunction touches(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\nfunction dragDisable(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nfunction constant$2(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction drag() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction basisClosed(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction constant$3(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nfunction array$1(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nfunction date(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n\nfunction reinterpolate(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n\nfunction object(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nfunction interpolateString(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nfunction interpolateValue(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n}\n\nfunction interpolateRound(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nfunction decompose(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nfunction interpolateZoom(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nfunction quantize(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create$1(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = get$1(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = get$1(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create$1(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set$1(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n}\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection$1 = selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection$1(this._groups, this._parents);\n}\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n}\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction constant$4(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction BrushEvent(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent$1() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nfunction brush() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nfunction chord() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n\nvar slice$2 = Array.prototype.slice;\n\nfunction constant$5(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction ribbon() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nfunction nest() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nfunction keys(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n\nfunction values(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n\nfunction entries(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n\nvar EOL = {};\nvar EOF = {};\nvar QUOTE = 34;\nvar NEWLINE = 10;\nvar RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction dsv(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nfunction center$1(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction constant$6(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction jiggle() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n\nfunction tree_add(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nfunction tree_cover(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\nfunction tree_data() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\nfunction tree_extent(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\nfunction Quad(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\nfunction tree_find(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction tree_remove(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return next ? previous.next = next : delete previous.next, this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nfunction tree_root() {\n  return this._root;\n}\n\nfunction tree_size() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\nfunction tree_visit(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\nfunction tree_visitAfter(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction tree_x(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction tree_y(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nfunction collide(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nfunction link(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nfunction simulation(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\nfunction manyBody() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nfunction radial(radius, x, y) {\n  var nodes,\n      strength = constant$6(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant$6(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction x$2(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\nfunction y$2(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nfunction formatDecimal(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nfunction exponent$1(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n\nfunction formatGroup(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nfunction formatNumerals(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n\nfunction formatDefault(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n}\n\nvar prefixExponent;\n\nfunction formatPrefixAuto(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nfunction formatRounded(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction formatLocale(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nfunction precisionFixed(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n}\n\nfunction precisionPrefix(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n}\n\nfunction precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n}\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nfunction adder() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nfunction geoStream(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nfunction area(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n}\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nfunction bounds(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n}\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroid(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n}\n\nfunction constant$7(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction compose(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nfunction rotation(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n}\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nfunction circle() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\nfunction clipBuffer() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n}\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nfunction clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum$1 = adder();\n\nfunction polygonContains(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n}\n\nfunction clip(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nfunction clipCircle(radius) {\n  var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n}\n\nfunction clipLine(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nfunction extent$1() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nfunction length$1(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n}\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nfunction distance(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n}\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nfunction contains(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nfunction interpolate$1(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\nfunction identity$4(x) {\n  return x;\n}\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nfunction index$1(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n\nfunction transform(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream$1));\n  fitBounds(boundsStream$1.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nfunction resample(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nfunction conicEqualArea() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\nfunction albers() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nfunction albersUsa() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null, (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nfunction azimuthalEqualArea() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nfunction azimuthalEquidistant() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nfunction mercator() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n}\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nfunction conicConformal() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nfunction equirectangular() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nfunction conicEquidistant() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nfunction gnomonic() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nfunction identity$5() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity$4,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon$2 && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nfunction naturalEarth1() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nfunction orthographic() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n}\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nfunction stereographic() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nfunction transverseMercator() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nfunction cluster() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nfunction node_count() {\n  return this.eachAfter(count);\n}\n\nfunction node_each(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n\nfunction node_eachBefore(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n\nfunction node_eachAfter(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n\nfunction node_sum(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n\nfunction node_sort(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n\nfunction node_path(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nfunction node_ancestors() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nfunction node_descendants() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n\nfunction node_leaves() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n\nfunction node_links() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice$3 = Array.prototype.slice;\n\nfunction shuffle$1(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nfunction enclose(circles) {\n  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nfunction siblings(circles) {\n  packEnclose(circles);\n  return circles;\n}\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nfunction constant$8(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction index$2() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nfunction roundNode(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n\nfunction treemapDice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n\nfunction partition() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nfunction stratify() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nfunction tree() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n\nfunction treemapSlice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nfunction index$3() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n\nfunction binary(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n\nfunction sliceDice(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n}\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nfunction area$1(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n\nfunction centroid$1(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nfunction cross$1(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nfunction hull(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n\nfunction contains$1(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n\nfunction length$2(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n\nvar slice$4 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$4.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nfunction defaultSource$1() {\n  return Math.random();\n}\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource$1);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource$1);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource$1);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource$1);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource$1);\n\nvar exponential$1 = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource$1);\n\nfunction request(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n}\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nfunction type$1(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n}\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nfunction dsv$1(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n}\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$5 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$5.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction constant$9(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction number$2(x) {\n  return +x;\n}\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nfunction tickFormat(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n}\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nfunction nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day$$1;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day$$1 = week.getUTCDay();\n          week = day$$1 > 4 || day$$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day$$1 = week.getDay();\n          week = day$$1 > 4 || day$$1 === 0 ? monday.ceil(week) : monday(week);\n          week = day.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day$$1 = d.getDay();\n  return day$$1 === 0 ? 7 : day$$1;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day$$1 = d.getDay();\n  d = (day$$1 >= 4 || day$$1 === 0) ? thursday(d) : thursday.ceil(d);\n  return pad(thursday.count(year(d), d) + (year(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day$$1 = d.getUTCDay();\n  d = (day$$1 >= 4 || day$$1 === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$1 = formatLocale$1(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$3(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nfunction time() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n\nfunction utcTime() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n\nfunction colors(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nfunction rainbow$1(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nfunction constant$10(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nfunction line() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area$2() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending$1(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity$7(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction lineRadial$1() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n\nfunction areaRadial() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nfunction pointRadial(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n\nvar slice$6 = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop$2() {}\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis$2(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed$1(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nfunction none$1(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none$2(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stack() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n}\n\nfunction diverging(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n}\n\nfunction ascending$2(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending$2(series) {\n  return ascending$2(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none$2(series).reverse();\n}\n\nfunction constant$11(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nfunction voronoi() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n\nfunction constant$12(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent$2() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nfunction defaultWheelDelta() {\n  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable$1() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform$$1, extent, translateExtent) {\n  var dx0 = transform$$1.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform$$1.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform$$1.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform$$1.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform$$1.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nfunction zoom() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable$1,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform$$1) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform$$1);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform$$1, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n  }\n\n  function translate(transform$$1, p0, p1) {\n    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform$$1, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform$$1) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n      this.that.__zoom = transform$$1;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent$1;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.create = create;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.clientPoint = point;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ }),\n\n/***/ 49:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(4);\nmodule.exports = __webpack_require__(5);\n\n\n/***/ }),\n\n/***/ 5:\n/***/ (function(module, exports) {\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.urlon = f()}})(function(){var define,module,exports;module={exports:(exports={})};\n/* eslint-disable no-labels */\n'use strict'\n\nvar keyStringifyRegexp = /([=:@$/])/g\nvar valueStringifyRegexp = /([&;/])/g\nvar keyParseRegexp = /[=:@$]/\nvar valueParseRegexp = /[&;]/\n\nfunction encodeString (str, regexp) {\n  return encodeURI(str.replace(regexp, '/$1'))\n}\n\nfunction trim (res) {\n  return typeof res === 'string' ? res.replace(/;+$/g, '') : res\n}\n\nfunction stringify (input, recursive) {\n  if (!recursive) {\n    return trim(stringify(input, true))\n  }\n  // Number, Boolean or Null\n  if (\n    typeof input === 'number' ||\n    input === true ||\n    input === false ||\n    input === null\n  ) {\n    return ':' + input\n  }\n  var res = []\n  // Array\n  if (input instanceof Array) {\n    for (var i = 0; i < input.length; ++i) {\n      typeof input[i] === 'undefined'\n        ? res.push(':null')\n        : res.push(stringify(input[i], true))\n    }\n    return '@' + res.join('&') + ';'\n  }\n  // Object\n  if (typeof input === 'object') {\n    for (var key in input) {\n      var val = stringify(input[key], true)\n      if (val) {\n        res.push(encodeString(key, keyStringifyRegexp) + val)\n      }\n    }\n    return '$' + res.join('&') + ';'\n  }\n  // undefined\n  if (typeof input === 'undefined') {\n    return\n  }\n  // String\n  return '=' + encodeString(input.toString(), valueStringifyRegexp)\n}\n\nfunction parse (str) {\n  var pos = 0\n  str = decodeURI(str)\n\n  function readToken (regexp) {\n    var token = ''\n    for (; pos !== str.length; ++pos) {\n      if (str.charAt(pos) === '/') {\n        pos += 1\n        if (pos === str.length) {\n          token += ';'\n          break\n        }\n      } else if (str.charAt(pos).match(regexp)) {\n        break\n      }\n      token += str.charAt(pos)\n    }\n    return token\n  }\n\n  function parseToken () {\n    var type = str.charAt(pos++)\n    // String\n    if (type === '=') {\n      return readToken(valueParseRegexp)\n    }\n    // Number, Boolean or Null\n    if (type === ':') {\n      var value = readToken(valueParseRegexp)\n      if (value === 'true') {\n        return true\n      }\n      if (value === 'false') {\n        return false\n      }\n      value = parseFloat(value)\n      return isNaN(value) ? null : value\n    }\n    var res\n    // Array\n    if (type === '@') {\n      res = []\n      loop: {\n        // empty array\n        if (pos >= str.length || str.charAt(pos) === ';') {\n          break loop\n        }\n        // parse array items\n        while (1) {\n          res.push(parseToken())\n          if (pos >= str.length || str.charAt(pos) === ';') {\n            break loop\n          }\n          pos += 1\n        }\n      }\n      pos += 1\n      return res\n    }\n    // Object\n    if (type === '$') {\n      res = {}\n      loop: {\n        if (pos >= str.length || str.charAt(pos) === ';') {\n          break loop\n        }\n        while (1) {\n          var name = readToken(keyParseRegexp)\n          res[name] = parseToken()\n          if (pos >= str.length || str.charAt(pos) === ';') {\n            break loop\n          }\n          pos += 1\n        }\n      }\n      pos += 1\n      return res\n    }\n    // Error\n    throw new Error('Unexpected char ' + type)\n  }\n\n  return parseToken()\n}\n\nmodule.exports = {\n  stringify: stringify,\n  parse: parse\n}\n\nreturn module.exports;});\n\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// vendor.js"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [], result;\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n \t\tif(executeModules) {\n \t\t\tfor(i=0; i < executeModules.length; i++) {\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = executeModules[i]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// objects to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData === 0) {\n \t\t\treturn new Promise(function(resolve) { resolve(); });\n \t\t}\n\n \t\t// a Promise means \"currently loading\".\n \t\tif(installedChunkData) {\n \t\t\treturn installedChunkData[2];\n \t\t}\n\n \t\t// setup Promise in chunk cache\n \t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t});\n \t\tinstalledChunkData[2] = promise;\n\n \t\t// start chunk loading\n \t\tvar head = document.getElementsByTagName('head')[0];\n \t\tvar script = document.createElement('script');\n \t\tscript.type = 'text/javascript';\n \t\tscript.charset = 'utf-8';\n \t\tscript.async = true;\n \t\tscript.timeout = 120000;\n\n \t\tif (__webpack_require__.nc) {\n \t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t}\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".js\";\n \t\tvar timeout = setTimeout(onScriptComplete, 120000);\n \t\tscript.onerror = script.onload = onScriptComplete;\n \t\tfunction onScriptComplete() {\n \t\t\t// avoid mem leaks in IE.\n \t\t\tscript.onerror = script.onload = null;\n \t\t\tclearTimeout(timeout);\n \t\t\tvar chunk = installedChunks[chunkId];\n \t\t\tif(chunk !== 0) {\n \t\t\t\tif(chunk) {\n \t\t\t\t\tchunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));\n \t\t\t\t}\n \t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t}\n \t\t};\n \t\thead.appendChild(script);\n\n \t\treturn promise;\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 49);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8d676237cc9d0046b126","// https://d3js.org Version 4.13.0. Copyright 2018 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.13.0\";\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nfunction pairs(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction cross(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction variance(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n\nfunction deviation(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction sequence(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction sturges(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\nfunction histogram() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction threshold(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction max(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n\nfunction mean(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n\nfunction median(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n}\n\nfunction merge(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\nfunction min(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n\nfunction permute(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n\nfunction scan(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n\nfunction shuffle(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n\nfunction sum(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nvar slice$1 = Array.prototype.slice;\n\nfunction identity$1(x) {\n  return x;\n}\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number$1(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nfunction namespace(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nfunction creator(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\nfunction none() {}\n\nfunction selector(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n\nfunction selection_select(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction empty$1() {\n  return [];\n}\n\nfunction selectorAll(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\nfunction selection_selectAll(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nfunction selection_filter(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction sparse(update) {\n  return new Array(update.length);\n}\n\nfunction selection_enter() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nfunction constant$1(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction selection_data(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\nfunction selection_exit() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n\nfunction selection_merge(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n\nfunction selection_order() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction selection_sort(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction selection_call() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\nfunction selection_nodes() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n\nfunction selection_node() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\nfunction selection_size() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n\nfunction selection_empty() {\n  return !this.node();\n}\n\nfunction selection_each(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nfunction selection_attr(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\nfunction defaultView(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nfunction selection_style(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nfunction selection_property(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nfunction selection_classed(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_text(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_html(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nfunction selection_raise() {\n  return this.each(raise);\n}\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nfunction selection_lower() {\n  return this.each(lower);\n}\n\nfunction selection_append(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\nfunction constantNull() {\n  return null;\n}\n\nfunction selection_insert(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nfunction selection_remove() {\n  return this.each(remove);\n}\n\nfunction selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nfunction selection_clone(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n\nfunction selection_datum(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nfunction selection_on(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nfunction selection_dispatch(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nfunction select(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n\nfunction create(name) {\n  return select(creator(name).call(document.documentElement));\n}\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction sourceEvent() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n\nfunction point(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n\nfunction mouse(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n\nfunction selectAll(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n\nfunction touch(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n\nfunction touches(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\nfunction dragDisable(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nfunction constant$2(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction drag() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction basisClosed(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction constant$3(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nfunction array$1(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nfunction date(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n\nfunction reinterpolate(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n\nfunction object(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nfunction interpolateString(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nfunction interpolateValue(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n}\n\nfunction interpolateRound(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nfunction decompose(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nfunction interpolateZoom(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nfunction quantize(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create$1(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = get$1(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = get$1(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create$1(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set$1(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n}\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection$1 = selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection$1(this._groups, this._parents);\n}\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n}\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction constant$4(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction BrushEvent(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent$1() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nfunction brush() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nfunction chord() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n\nvar slice$2 = Array.prototype.slice;\n\nfunction constant$5(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction ribbon() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nfunction nest() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nfunction keys(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n\nfunction values(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n\nfunction entries(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n\nvar EOL = {};\nvar EOF = {};\nvar QUOTE = 34;\nvar NEWLINE = 10;\nvar RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction dsv(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nfunction center$1(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction constant$6(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction jiggle() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n\nfunction tree_add(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nfunction tree_cover(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\nfunction tree_data() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\nfunction tree_extent(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\nfunction Quad(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\nfunction tree_find(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction tree_remove(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return next ? previous.next = next : delete previous.next, this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nfunction tree_root() {\n  return this._root;\n}\n\nfunction tree_size() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\nfunction tree_visit(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\nfunction tree_visitAfter(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction tree_x(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction tree_y(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nfunction collide(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nfunction link(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nfunction simulation(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\nfunction manyBody() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nfunction radial(radius, x, y) {\n  var nodes,\n      strength = constant$6(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant$6(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction x$2(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\nfunction y$2(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nfunction formatDecimal(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nfunction exponent$1(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n\nfunction formatGroup(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nfunction formatNumerals(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n\nfunction formatDefault(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n}\n\nvar prefixExponent;\n\nfunction formatPrefixAuto(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nfunction formatRounded(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction formatLocale(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nfunction precisionFixed(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n}\n\nfunction precisionPrefix(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n}\n\nfunction precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n}\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nfunction adder() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nfunction geoStream(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nfunction area(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n}\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nfunction bounds(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n}\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroid(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n}\n\nfunction constant$7(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction compose(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nfunction rotation(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n}\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nfunction circle() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\nfunction clipBuffer() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n}\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nfunction clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum$1 = adder();\n\nfunction polygonContains(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n}\n\nfunction clip(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nfunction clipCircle(radius) {\n  var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n}\n\nfunction clipLine(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nfunction extent$1() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nfunction length$1(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n}\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nfunction distance(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n}\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nfunction contains(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nfunction interpolate$1(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\nfunction identity$4(x) {\n  return x;\n}\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nfunction index$1(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n\nfunction transform(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream$1));\n  fitBounds(boundsStream$1.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nfunction resample(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nfunction conicEqualArea() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\nfunction albers() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nfunction albersUsa() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null, (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nfunction azimuthalEqualArea() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nfunction azimuthalEquidistant() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nfunction mercator() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n}\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nfunction conicConformal() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nfunction equirectangular() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nfunction conicEquidistant() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nfunction gnomonic() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nfunction identity$5() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity$4,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon$2 && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nfunction naturalEarth1() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nfunction orthographic() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n}\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nfunction stereographic() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nfunction transverseMercator() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nfunction cluster() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nfunction node_count() {\n  return this.eachAfter(count);\n}\n\nfunction node_each(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n\nfunction node_eachBefore(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n\nfunction node_eachAfter(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n\nfunction node_sum(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n\nfunction node_sort(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n\nfunction node_path(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nfunction node_ancestors() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nfunction node_descendants() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n\nfunction node_leaves() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n\nfunction node_links() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice$3 = Array.prototype.slice;\n\nfunction shuffle$1(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nfunction enclose(circles) {\n  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nfunction siblings(circles) {\n  packEnclose(circles);\n  return circles;\n}\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nfunction constant$8(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction index$2() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nfunction roundNode(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n\nfunction treemapDice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n\nfunction partition() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nfunction stratify() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nfunction tree() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n\nfunction treemapSlice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nfunction index$3() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n\nfunction binary(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n\nfunction sliceDice(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n}\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nfunction area$1(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n\nfunction centroid$1(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nfunction cross$1(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nfunction hull(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n\nfunction contains$1(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n\nfunction length$2(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n\nvar slice$4 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$4.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nfunction defaultSource$1() {\n  return Math.random();\n}\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource$1);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource$1);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource$1);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource$1);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource$1);\n\nvar exponential$1 = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource$1);\n\nfunction request(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n}\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nfunction type$1(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n}\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nfunction dsv$1(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n}\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$5 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$5.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction constant$9(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction number$2(x) {\n  return +x;\n}\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nfunction tickFormat(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n}\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nfunction nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day$$1;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day$$1 = week.getUTCDay();\n          week = day$$1 > 4 || day$$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day$$1 = week.getDay();\n          week = day$$1 > 4 || day$$1 === 0 ? monday.ceil(week) : monday(week);\n          week = day.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day$$1 = d.getDay();\n  return day$$1 === 0 ? 7 : day$$1;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day$$1 = d.getDay();\n  d = (day$$1 >= 4 || day$$1 === 0) ? thursday(d) : thursday.ceil(d);\n  return pad(thursday.count(year(d), d) + (year(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day$$1 = d.getUTCDay();\n  d = (day$$1 >= 4 || day$$1 === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$1 = formatLocale$1(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$3(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nfunction time() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n\nfunction utcTime() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n\nfunction colors(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nfunction rainbow$1(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nfunction constant$10(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nfunction line() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area$2() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending$1(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity$7(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction lineRadial$1() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n\nfunction areaRadial() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nfunction pointRadial(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n\nvar slice$6 = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop$2() {}\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis$2(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed$1(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nfunction none$1(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none$2(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stack() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n}\n\nfunction diverging(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n}\n\nfunction ascending$2(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending$2(series) {\n  return ascending$2(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none$2(series).reverse();\n}\n\nfunction constant$11(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nfunction voronoi() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n\nfunction constant$12(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nfunction noevent$2() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nfunction defaultWheelDelta() {\n  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable$1() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform$$1, extent, translateExtent) {\n  var dx0 = transform$$1.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform$$1.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform$$1.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform$$1.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform$$1.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nfunction zoom() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable$1,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform$$1) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform$$1);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform$$1, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n  }\n\n  function translate(transform$$1, p0, p1) {\n    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform$$1, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform$$1) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n      this.that.__zoom = transform$$1;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent$1;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.create = create;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.clientPoint = point;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3/build/d3.js\n// module id = 4\n// module chunks = 2","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.urlon = f()}})(function(){var define,module,exports;module={exports:(exports={})};\n/* eslint-disable no-labels */\n'use strict'\n\nvar keyStringifyRegexp = /([=:@$/])/g\nvar valueStringifyRegexp = /([&;/])/g\nvar keyParseRegexp = /[=:@$]/\nvar valueParseRegexp = /[&;]/\n\nfunction encodeString (str, regexp) {\n  return encodeURI(str.replace(regexp, '/$1'))\n}\n\nfunction trim (res) {\n  return typeof res === 'string' ? res.replace(/;+$/g, '') : res\n}\n\nfunction stringify (input, recursive) {\n  if (!recursive) {\n    return trim(stringify(input, true))\n  }\n  // Number, Boolean or Null\n  if (\n    typeof input === 'number' ||\n    input === true ||\n    input === false ||\n    input === null\n  ) {\n    return ':' + input\n  }\n  var res = []\n  // Array\n  if (input instanceof Array) {\n    for (var i = 0; i < input.length; ++i) {\n      typeof input[i] === 'undefined'\n        ? res.push(':null')\n        : res.push(stringify(input[i], true))\n    }\n    return '@' + res.join('&') + ';'\n  }\n  // Object\n  if (typeof input === 'object') {\n    for (var key in input) {\n      var val = stringify(input[key], true)\n      if (val) {\n        res.push(encodeString(key, keyStringifyRegexp) + val)\n      }\n    }\n    return '$' + res.join('&') + ';'\n  }\n  // undefined\n  if (typeof input === 'undefined') {\n    return\n  }\n  // String\n  return '=' + encodeString(input.toString(), valueStringifyRegexp)\n}\n\nfunction parse (str) {\n  var pos = 0\n  str = decodeURI(str)\n\n  function readToken (regexp) {\n    var token = ''\n    for (; pos !== str.length; ++pos) {\n      if (str.charAt(pos) === '/') {\n        pos += 1\n        if (pos === str.length) {\n          token += ';'\n          break\n        }\n      } else if (str.charAt(pos).match(regexp)) {\n        break\n      }\n      token += str.charAt(pos)\n    }\n    return token\n  }\n\n  function parseToken () {\n    var type = str.charAt(pos++)\n    // String\n    if (type === '=') {\n      return readToken(valueParseRegexp)\n    }\n    // Number, Boolean or Null\n    if (type === ':') {\n      var value = readToken(valueParseRegexp)\n      if (value === 'true') {\n        return true\n      }\n      if (value === 'false') {\n        return false\n      }\n      value = parseFloat(value)\n      return isNaN(value) ? null : value\n    }\n    var res\n    // Array\n    if (type === '@') {\n      res = []\n      loop: {\n        // empty array\n        if (pos >= str.length || str.charAt(pos) === ';') {\n          break loop\n        }\n        // parse array items\n        while (1) {\n          res.push(parseToken())\n          if (pos >= str.length || str.charAt(pos) === ';') {\n            break loop\n          }\n          pos += 1\n        }\n      }\n      pos += 1\n      return res\n    }\n    // Object\n    if (type === '$') {\n      res = {}\n      loop: {\n        if (pos >= str.length || str.charAt(pos) === ';') {\n          break loop\n        }\n        while (1) {\n          var name = readToken(keyParseRegexp)\n          res[name] = parseToken()\n          if (pos >= str.length || str.charAt(pos) === ';') {\n            break loop\n          }\n          pos += 1\n        }\n      }\n      pos += 1\n      return res\n    }\n    // Error\n    throw new Error('Unexpected char ' + type)\n  }\n\n  return parseToken()\n}\n\nmodule.exports = {\n  stringify: stringify,\n  parse: parse\n}\n\nreturn module.exports;});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/urlon/dist/urlon.umd.js\n// module id = 5\n// module chunks = 2"],"sourceRoot":""}